{"version":3,"sources":["../src/xe_lib.js"],"names":["define","$","jaxy","preLoadConfig","window_stat","window","__SERVER__","__INITIAL_STATE__","JSON","parse","error","console","log","key","localStorage","pushPost","redirectUrl","data","input_part","form_part","form","value","append","submit","jaxyPromise","promiseObj","Promise","resolve","XEAjax","stringify","then","response"],"mappings":"AAsBAA,OAAM,sBAAC,CAAC,QAAD,CAAW,kBAAX,CAAD,CACF,SAASC,CAAT,CAAYC,CAAZ,CAAkB,CAClB,aACA,MAAO,CAQHC,aAAa,CAAE,wBAAW,CACtB,GAAIC,CAAAA,CAAW,CAAG,EAAlB,CAEA,GAA0B,MAAtB,GAAAC,MAAM,CAACC,UAAP,EAAgC,KAAAD,MAAM,CAACC,UAA3C,CAAgE,CAC5D,GAA0C,QAAtC,QAAQD,CAAAA,MAAM,CAACE,iBAAnB,CAAoD,CAChD,GAAI,CACAH,CAAW,CAAGI,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACE,iBAAlB,CAAd,CACA,MAAOF,CAAAA,MAAM,CAACE,iBAAd,CACAF,MAAM,CAACC,UAAP,GACH,CAAC,MAAOI,CAAP,CAAc,CAEZC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CACH,CACJ,CACJ,CAXD,IAWO,CACHC,OAAO,CAACC,GAAR,CAAY,wCAAZ,CACH,CAED,IAAK,GAAIC,CAAAA,CAAT,GAAgBT,CAAAA,CAAhB,CAA6B,CAEzBU,YAAY,CAACD,CAAD,CAAZ,CAAoBT,CAAW,CAACS,CAAD,CAClC,CACJ,CA9BE,CAuCHE,QAAQ,CAAE,kBAASC,CAAT,CAAsBC,CAAtB,CAA4B,CAElC,GAAIC,CAAAA,CAAU,CAAG,EAAjB,CACIC,CAAS,CAAG,EADhB,CAEIC,CAFJ,CAIA,IAAK,GAAIP,CAAAA,CAAT,GAAgBI,CAAAA,CAAhB,CAAsB,CAClB,GAAII,CAAAA,CAAK,CAAGJ,CAAI,CAACJ,CAAD,CAAhB,CACAK,CAAU,EAAI,kCAAiCG,CAAjC,CAAyC,YAAzC,CAAsDR,CAAtD,CAA4D,aAC7E,CAEDM,CAAS,CAAG,kDAAgDD,CAAhD,CAA6D,SAAzE,CACAE,CAAI,CAAGnB,CAAC,CAACkB,CAAD,CAAR,CACAlB,CAAC,CAAC,MAAD,CAAD,CAAUqB,MAAV,CAAiBF,CAAjB,EACAnB,CAAC,CAACmB,CAAD,CAAD,CAAQG,MAAR,EACH,CAtDE,CAgEHC,WAAW,CAAE,qBAAUP,CAAV,CAAgB,CACzB,GAAIQ,CAAAA,CAAU,CAAG,GAAIC,CAAAA,OAAJ,CAAY,SAAUC,CAAV,CAAmB,CAC5CzB,CAAI,CAAC0B,MAAL,CAAYpB,IAAI,CAACqB,SAAL,CAAeZ,CAAf,CAAZ,EAAkCa,IAAlC,CAAuC,SAAUC,CAAV,CAAoB,CACvDJ,CAAO,CAACI,CAAD,CACV,CAFD,CAGH,CAJgB,CAAjB,CAKA,MAAON,CAAAA,CACV,CAvEE,CAyEV,CA5EK,CAAN","sourcesContent":["// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Cross Enrollment Tool\n *\n * @package    block_lsuxe\n * @copyright  2008 onwards Louisiana State University\n * @copyright  2008 onwards David Lowe\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'block_lsuxe/jaxy'],\n    function($, jaxy) {\n    'use strict';\n    return {\n\n        /**\n         * Store data in localStorage so it's available throughout\n         *\n         * @param {object} the json object to save\n         * @return null\n         */\n        preLoadConfig: function() {\n            var window_stat = {};\n\n            if (window.__SERVER__ === \"true\" || window.__SERVER__ === true) {\n                if (typeof (window.__INITIAL_STATE__) === 'string') {\n                    try {\n                        window_stat = JSON.parse(window.__INITIAL_STATE__);\n                        delete window.__INITIAL_STATE__;\n                        window.__SERVER__ = false;\n                    } catch (error) {\n                        // console.log(\"ERROR, __INITIAL_STATE__ couldn't parse.\");\n                        console.log(error);\n                    }\n                }\n            } else {\n                console.log(\"WARNING: window.__SERVER__ was not set\");\n            }\n            // console.log(\"What is the data: \", window_stat);\n            for (var key in window_stat) {\n                // console.log(\"Going to store this value: \" + window_stat[key] + \" in this key: \" + key);\n                localStorage[key] = window_stat[key];\n            }\n        },\n\n        /**\n         * Post data to a URL. This is a form submit and will cause a page reload POSTing data.\n         *\n         * @param {string} redirectUrl to post to, self if nothing passed.\n         * @param {object} the json object to post\n         * @return {Promise}\n         */\n        pushPost: function(redirectUrl, data) {\n\n            var input_part = '',\n                form_part = '',\n                form;\n\n            for (var key in data) {\n                var value = data[key];\n                input_part += '<input type=\"hidden\" value=\"' + value + '\" name=\"' + key + '\"></input>';\n            }\n\n            form_part = '<form method=\"POST\" style=\"display: none;\">' + input_part + '</form>';\n            form = $(form_part);\n            $('body').append(form);\n            $(form).submit();\n        },\n\n        /* ====================================================================== */\n        /* ===================      AJAX Functions      ========================= */\n        /* ====================================================================== */\n        /** Description: Make an AJAX call and return a json object. Wrapping the AJAX\n         *  call in a promise.\n         * @param - {object} the details of the ajax call\n         * @return {Promise}\n         */\n        jaxyPromise: function (data) {\n            var promiseObj = new Promise(function (resolve) {\n                jaxy.XEAjax(JSON.stringify(data)).then(function (response) {\n                    resolve(response);\n                });\n            });\n            return promiseObj;\n        },\n    };\n});"],"file":"xe_lib.min.js"}
{"version":3,"sources":["../src/crud_buttons.js"],"names":["define","$","noti","XELib","registerEvents","on","ev","preventDefault","row_data","closest","data","callYesNoModi","then","response","status","this_form","record","append","submit","url","sessionStorage","getItem","pushPost","links","callAlert","init","that"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Cross Enrollment Tool\n *\n * @package   block_lsuxe\n * @copyright 2008 onwards Louisiana State University\n * @copyright 2008 onwards David Lowe, Robert Russo\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n define(['jquery', 'block_lsuxe/notifications', 'block_lsuxe/xe_lib'],\n    function($, noti, XELib) {\n    'use strict';\n    return {\n\n        /**\n         * Register click events for the page.\n         *\n         * @param null\n         * @return void\n         */\n        registerEvents: function () {\n\n            // --------------------------------\n            // Recover Mapping.\n            // --------------------------------\n            $('.block_lsuxe_container .mview_recover').on('click', function(ev) {\n                ev.preventDefault();\n                var row_data = {\n                    \"record\": $(this).closest(\"tr\").data(\"rowid\"),\n                    \"this_form\": $(this).closest(\"form\"),\n                    \"title\": 'Recover Mapping',\n                    \"body\": 'Do you really want to recover this?',\n                    \"save_button\": \"Recover\"\n                };\n\n                noti.callYesNoModi(row_data).then(function (response) {\n                    if (response.status == true) {\n                        var this_form = $('#map_form_'+response.data.record);\n                        // Convert all the form elements values to a serialised string.\n                        this_form.append('<input type=\"hidden\" name=\"sentaction\" value=\"recovered\" />');\n                        this_form.submit();\n                    // } else {\n                        // console.log(\"NOPE the thingy is false\");\n                    }\n                });\n            });\n\n            // --------------------------------\n            // Edit Mapping.\n            // --------------------------------\n            $('.block_lsuxe_container .mview_edit').on('click', function(ev) {\n                ev.preventDefault();\n                var record = $(this).closest(\"tr\").data(\"rowid\"),\n                    send_this = {\n                        \"sentaction\": \"update\",\n                        \"sentdata\": record,\n                        \"vform\": \"1\"\n                    },\n                    url = sessionStorage.getItem(\"wwwroot\") + \"/blocks/lsuxe/\" + sessionStorage.getItem(\"xe_form\") + \".php\";\n                XELib.pushPost(url, send_this);\n            });\n\n            // --------------------------------\n            // Delete Mapping.\n            // --------------------------------\n            $('.block_lsuxe_container .mview_delete').on('click', function(ev) {\n                ev.preventDefault();\n\n                var links = $(this).closest(\"tr\").data(\"mlinks\"),\n                row_data = {\n                    \"record\": $(this).closest(\"tr\").data(\"rowid\"),\n                    \"this_form\": $(this).closest(\"form\"),\n                    \"title\": 'Delete item',\n                    \"body\": 'Do you really want to delete?',\n                    \"save_button\": \"Delete\"\n                };\n\n                if (links > 1) {\n                    noti.callAlert({\n                        \"title\": \"Aborted\",\n                        \"message\": \"Cannot delete this while mappings are linked.\"\n                    });\n                } else {\n                    noti.callYesNoModi(row_data).then(function (response) {\n                        if (response.status == true) {\n                            var this_form = $('#map_form_' + response.data.record);\n                            // Convert all the form elements values to a serialised string.\n                            this_form.append('<input type=\"hidden\" name=\"sentaction\" value=\"delete\" />');\n                            this_form.submit();\n                        }\n                    });\n                }\n            });\n        },\n\n        /**\n         * Currently this is being called from the mustache templates when viewing lists.\n         * @param null\n         * @return void\n         */\n        init: function() {\n            var that = this;\n            // Register events.\n            that.registerEvents();\n        },\n    };\n});"],"file":"crud_buttons.min.js"}
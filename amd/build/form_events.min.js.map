{"version":3,"sources":["../src/form_events.js"],"names":["define","$","XELib","getTokenReady","url","text","getTokenForURL","then","response","success","sessionStorage","setItem","data","getGroupData","params","jaxyPromise","setHiddenValue","tag","value","val","checkMarkOn","console","log","css","checkMarkOff","checkMarkLoading","cl","hasClass","toggleClass","toggle","checkMarkComplete","crossMarkOn","crossMarkOff","registerMoodleEvents","that","on","length","isValidUrl","test_url","test_token","testWebServices","registerMappingEvents","form_select","change","count","groupname","empty","first_choice","i","groupid","append","attr","new_value","find","new_text","registerEvents","getItem","init"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Cross Enrollment Tool\n *\n * @package    block_lsuxe\n * @copyright  2008 onwards Louisiana State University\n * @copyright  2008 onwards David Lowe\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n define(['jquery', 'block_lsuxe/xe_lib'],\n    function($, XELib) {\n    'use strict';\n    return {\n        /**\n         * Fetch the token for the current selected URL. Store in temp sessionStorage\n         *\n         * @param null\n         * @return void\n         */\n        getTokenReady: function () {\n            // Check to see if this is the first time landing or not.\n            var url = $('#id_available_moodle_instances option:selected').text();\n\n            XELib.getTokenForURL(url).then(function (response) {\n                if (response.success == true) {\n                    sessionStorage.setItem(\"currentToken\", response.data);\n                    sessionStorage.setItem(\"currentUrl\", url);\n                } else {\n                    // TODO: Send Notification to user that token is crap\n                }\n            });\n        },\n\n        /**\n         * Get group data from a course.\n         * @param {object} the json object sent to the server\n         * @return resolved data\n         */\n        getGroupData: function (params) {\n            return XELib.jaxyPromise({\n                'call': 'getGroupData',\n                'params': params,\n                'class': 'router'\n            });\n        },\n\n        /**\n         * Moodle removes any changed option/select elements. In order to maintain\n         * the data push data into hidden some that are in the form's page.\n         * @param string name of the tag to be changed\n         * @param string the value to insert\n         * @return resolved data\n         */\n        setHiddenValue: function (tag, value) {\n            $('input[name='+tag+']').val(value);\n        },\n        // ==================================================================\n        // ==================================================================\n        // ==================================================================\n        // ==================================================================\n        // ==================================================================\n        // ==================================================================\n        // ==================================================================\n        // ==================================================================\n\n        checkMarkOn: function (tag) {\n            console.log(\"checkMarkOn() -> has been called.\");\n            $(tag + ' .circle-loader').css('visibility', 'visible');\n        },\n        checkMarkOff: function (tag) {\n            console.log(\"checkMarkOff() -> has been called.\");\n            $(tag + ' .circle-loader').css('visibility', 'hidden');\n        },\n        checkMarkLoading: function (tag) {\n            // make sure it's on\n            var cl = tag + ' .circle-loader',\n                cm = tag + ' .checkmark';\n\n            this.checkMarkOn(tag);\n            if ($(cl).hasClass('load-complete')) {\n                $(cl).toggleClass('load-complete');\n                $(cm).toggle();\n            }\n            console.log(\"checkMarkLoading() -> has been called.\");\n\n            // $('.xe_confirm_url > .checkmark').toggle();\n        },\n        checkMarkComplete: function (tag) {\n            var cl = tag + ' .circle-loader',\n                cm = tag + ' .checkmark';\n\n            if (!$(cl).hasClass('load-complete')) {\n                $(cl).toggleClass('load-complete');\n                $(cm).toggle();\n            }\n        },\n        crossMarkOn: function (tag) {\n            console.log(\"crossMarkOn() -> has been called.\");\n            $(tag + ' .circle-cross-loader').css('visibility', 'visible');\n        },\n\n        crossMarkOff: function (tag) {\n            console.log(\"crossMarkOff() -> has been called.\");\n            $(tag + ' .circle-cross-loader').css('visibility', 'hidden');\n        },\n\n        /**\n         * Register all the events for the Mappings Form Page.\n         * @return void\n         */\n        registerMoodleEvents: function() {\n            var that = this,\n                url_tag = '.xe_confirm_url',\n                token_tag = '.xe_confirm_token';\n            // Moodle URL Events\n            // Check if the URL is valid\n            // -------------------------------------------\n            $(\"#id_instanceurl\").on(\"input\", function() {\n                // that.handleInputValidation(this, \".xe_confirm_url\");\n                console.log(\"What is the input length: \" + this.value.length);\n                if (this.value.length > 0) {\n                    // Show the circle loading\n\n                    that.checkMarkLoading(url_tag);\n                }\n                if (this.value.length == 0) {\n                    that.checkMarkOff(url_tag);\n                }\n            });\n            // -------------------------------------------\n            // When the user clicks out of the Moodle URL input box, check if url is valid.\n            $('#id_instanceurl').on('blur',  function() {\n                // that.handleBlurValidation(this, '.xe_confirm_url');\n                // console.log(\"What is the url to check: \" + this.value);\n\n                // user has clicked out of the URL input, let's check it.\n                if (this.value.length > 0) {\n                    // there is something in the input, let's verify it's correct\n                    if (XELib.isValidUrl(this.value)) {\n                        console.log(\"The url is valid\");\n                        that.checkMarkComplete(url_tag);\n                        that.crossMarkOff(url_tag);\n\n                    } else {\n                        that.checkMarkOff(url_tag);\n                        that.crossMarkOn(url_tag);\n                        console.log(\"The url is NOT valid\");\n                        // $('.xe_confirm_url > .circle-cross-loader').css('visibility', 'visible');\n                    }\n                } else {\n                    that.checkMarkOff(url_tag);\n                    that.crossMarkOff(url_tag);\n                }\n            });\n            // -------------------------------------------\n            $('#id_instanceurl').on('focus',  function() {\n                // No matter what, if a user clicks in the input, remove the crossmark.\n                that.crossMarkOff(url_tag);\n            });\n\n            // ===========================================\n            // ===========================================\n            // Handle the token input.\n            $(\"#id_instancetoken\").on('input', function() {\n                if (this.value.length > 0) {\n                    // Show the circle loading\n                    that.checkMarkLoading(token_tag);\n                }\n                if (this.value.length == 0) {\n                    that.checkMarkOff(token_tag);\n                }\n            });\n            // -------------------------------------------\n            $(\"#id_instancetoken\").on('blur', function() {\n                // that.handleBlurValidation(this, \".xe_confirm_token\");\n                if (this.value.length > 31) {\n                    // The token length is correct\n                    that.checkMarkComplete(token_tag);\n                    that.crossMarkOff(token_tag);\n\n                } else if (this.value.length < 1) {\n                    that.checkMarkOff(token_tag);\n                    that.crossMarkOff(token_tag);\n\n                } else {\n                    that.crossMarkOn(token_tag);\n                    console.log(\"The token is NOT valid\");\n                    // $('.xe_confirm_token > .circle-cross-loader').css('visibility', 'visible');\n                }\n            });\n            // -------------------------------------------\n            $('#id_instancetoken').on('focus',  function() {\n                // that.handleInputValidation(this, \".xe_confirm_token\");\n                // No matter what, if a user clicks in the input, remove the crossmark.\n                that.crossMarkOff(token_tag);\n\n            });\n\n            // $('body').keypress(function(e){\n            //     console.log('keypress', String.fromCharCode( e.which ));\n            //     console.log('what is ewhich: ' + e.which);\n            //     if (e.which == 49) {\n            //         $('.xe_confirm_url .circle-loader').toggleClass('load-complete');\n            //         $('.xe_confirm_url .checkmark').toggle();\n\n            //     } else if (e.which == 50) {\n            //         $('.xe_confirm_token .circle-loader').toggleClass('load-complete');\n            //         $('.xe_confirm_token .checkmark').toggle();\n            //     }\n            // });\n\n            $('#id_verifysource').on('click', function() {\n                var test_url = $(\"#id_instanceurl\").val(),\n                    test_token = $(\"#id_instancetoken\").val();\n\n                console.log(\"What is the token: \" + test_token);\n                var params = {\n                    'type': 'GET',\n                    'url': test_url + '/admin/webservice/testclient.php',\n                    'data': {\n                        'wstoken': test_token,\n                        'wsfunction': 'core_course_get_categories',\n                        'moodlewsrestformat': 'json'\n                    }\n                };\n\n                XELib.testWebServices(params).then(function (response) {\n                    console.log(\"What is the response for the test server: \", response);\n                });\n            });\n        },\n\n        /**\n         * Register all the events for the Mappings Form Page.\n         * @return void\n         */\n        registerMappingEvents: function() {\n            var that = this,\n                form_select = $(\"#id_srccourseshortname\");\n\n            form_select.change(function() {\n\n                if (form_select.val()) {\n                    // change invokes any change so only make an ajax call if there is value\n                    that.getGroupData({\n                        'courseid': form_select.val(),\n                        'coursename': $( \"#id_srccourseshortname option:selected\" ).text()\n                    },).then(function (response) {\n                        // if the text is disabled then use select\n                        if (response.count == 1) {\n                            // Single entry so let's update the text field\n                            $('#id_srccoursegroupnameselect').val(response.data.groupname);\n                            $('#id_srccoursegroupname').val(response.data.groupname);\n\n                        } else if (response.count > 1) {\n                            // Multiple groups, so let's unhide the select\n                            $('#id_srccoursegroupnameselect').empty();\n                            var first_choice = \"\";\n                            for (let i in response.data) {\n                                // This is to store the first select and to be used.\n                                if (first_choice == \"\") {\n                                    first_choice = {\n                                        groupid: response.data[i].groupid,\n                                        groupname: response.data[i].groupname\n                                    };\n                                }\n                                $('#id_srccoursegroupnameselect')\n                                    .append($(\"<option></option>\")\n                                    .attr(\"value\", response.data[i].groupid)\n                                    .text(response.data[i].groupname));\n                            }\n\n                            // Now that it's been populated, set the hidden elements to match the first\n                            // select option.\n                            that.setHiddenValue('srccoursegroupname', first_choice.groupname);\n                            that.setHiddenValue('srccoursegroupid', first_choice.groupid);\n                        } else {\n                            // TODO: The count is neither 1 or greate than 1 so no groups?\n                            // display no groups.\n                        }\n\n                    });\n                } else {\n                    // if there is no value in the course name then clear out the group name.\n                    $('#id_srccoursegroupnameselect').empty();\n                    $('#id_srccoursegroupnametext').text();\n                    $('#id_srccoursegroupnameselect')\n                        .append($(\"<option></option>\")\n                        .attr(\"value\", 0)\n                        .text(\"Please search for a course first\"));\n                }\n            });\n\n            // Any changes to the group element, update the hidden.\n            $(\"#id_srccoursegroupnameselect\").change(function() {\n                var new_value = $(this).find(\"option:selected\").attr('value');\n                var new_text = $(this).find(\"option:selected\").text();\n                that.setHiddenValue('srccoursegroupname', new_text);\n                that.setHiddenValue('srccoursegroupid', new_value);\n            });\n\n            // Register events on the moodles form.\n            // onChange event for the URL selector\n            $('select#id_available_moodle_instances').on('change', function() {\n                that.getTokenReady();\n            });\n        },\n\n        /**\n         * These are registered events being loaded that are NOT being called from mustache templates\n         * @param null\n         * @return resolved data\n         */\n        registerEvents: function () {\n\n            // Let's not load all events, just what we need.\n            if (sessionStorage.getItem('xe_form') == \"mappings\" && sessionStorage.getItem('xe_viewform') == \"true\") {\n                // Register events on the mappings form.\n                this.registerMappingEvents();\n\n            } else if (sessionStorage.getItem('xe_form') == \"moodles\" && sessionStorage.getItem('xe_viewform') == \"true\") {\n                // Register events on the mappings form.\n                this.registerMoodleEvents();\n                // TODO: move from template to here.\n            }\n        },\n\n        init: function () {\n            this.registerEvents();\n            this.getTokenReady();\n        }\n    };\n});"],"file":"form_events.min.js"}
{"version":3,"sources":["../src/form_events.js"],"names":["define","$","XELib","getGroupData","params","jaxyPromise","registerEvents","that","form_select","localStorage","change","val","text","then","response","data","groupname"],"mappings":"AAsBCA,OAAM,2BAAC,CAAC,QAAD,CAAW,oBAAX,CAAD,CACH,SAASC,CAAT,CAAYC,CAAZ,CAAmB,CACnB,aACA,MAAO,CAMHC,YAAY,CAAE,sBAAUC,CAAV,CAAkB,CAC5B,MAAOF,CAAAA,CAAK,CAACG,WAAN,CAAkB,CACrB,KAAQ,cADa,CAErB,OAAUD,CAFW,CAGrB,MAAS,QAHY,CAAlB,CAKV,CAZE,CAmBHE,cAAc,CAAE,yBAAY,CACxB,GAAIC,CAAAA,CAAI,CAAG,IAAX,CACIC,CAAW,CAAGP,CAAC,CAAC,wBAAD,CADnB,CAGA,GAA+B,UAA3B,EAAAQ,YAAY,QAAZ,EAAwE,MAA/B,EAAAA,YAAY,YAAzD,CAAoF,CAChFD,CAAW,CAACE,MAAZ,CAAmB,UAAW,CAE1B,GAAIF,CAAW,CAACG,GAAZ,EAAJ,CAAuB,CAEnBJ,CAAI,CAACJ,YAAL,CAAkB,CACd,SAAYK,CAAW,CAACG,GAAZ,EADE,CAEd,WAAcV,CAAC,CAAE,wCAAF,CAAD,CAA8CW,IAA9C,EAFA,CAAlB,EAGIC,IAHJ,CAGS,SAAUC,CAAV,CAAoB,CAEzBb,CAAC,CAAC,wBAAD,CAAD,CAA4BU,GAA5B,CAAgCG,CAAQ,CAACC,IAAT,CAAcC,SAA9C,CACH,CAND,CAOH,CACJ,CAZD,CAaH,CACJ,CAtCE,CAwCV,CA3CM,CAAN","sourcesContent":["// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Cross Enrollment Tool\n *\n * @package    block_lsuxe\n * @copyright  2008 onwards Louisiana State University\n * @copyright  2008 onwards David Lowe\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n define(['jquery', 'block_lsuxe/xe_lib'],\n    function($, XELib) {\n    'use strict';\n    return {\n        /**\n         * Get group data from a course.\n         * @param {object} the json object sent to the server\n         * @return resolved data\n         */\n        getGroupData: function (params) {\n            return XELib.jaxyPromise({\n                'call': 'getGroupData',\n                'params': params,\n                'class': 'router'\n            });\n        },\n\n        /**\n         * These are registered events being loaded that are NOT being called from mustache templates\n         * @param null\n         * @return resolved data\n         */\n        registerEvents: function () {\n            var that = this,\n                form_select = $(\"#id_srccourseshortname\");\n\n            if (localStorage['xe_form'] == \"mappings\" && localStorage['xe_viewform'] == \"true\") {\n                form_select.change(function() {\n\n                    if (form_select.val()) {\n                        // change invokes any change so only make an ajax call if there is value\n                        that.getGroupData({\n                            'courseid': form_select.val(),\n                            'coursename': $( \"#id_srccourseshortname option:selected\" ).text()\n                        },).then(function (response) {\n                            // console.log(\"getGroupData() -> what is the response: \", response);\n                            $('#id_srccoursegroupname').val(response.data.groupname);\n                        });\n                    }\n                });\n            }\n        }\n    };\n});"],"file":"form_events.min.js"}
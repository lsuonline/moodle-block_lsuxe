{"version":3,"sources":["../src/form_events.js"],"names":["define","$","XELib","getTokenReady","url","text","getTokenForURL","then","response","success","sessionStorage","setItem","data","getGroupData","params","jaxyPromise","setHiddenValue","tag","value","val","registerMappingEvents","that","form_select","change","count","groupname","empty","first_choice","i","groupid","append","attr","new_value","find","new_text","on","registerEvents","getItem","console","log","init"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Cross Enrollment Tool\n *\n * @package    block_lsuxe\n * @copyright  2008 onwards Louisiana State University\n * @copyright  2008 onwards David Lowe\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n define(['jquery', 'block_lsuxe/xe_lib'],\n    function($, XELib) {\n    'use strict';\n    return {\n        /**\n         * Fetch the token for the current selected URL. Store in temp sessionStorage\n         *\n         * @param null\n         * @return void\n         */\n        getTokenReady: function () {\n            // Check to see if this is the first time landing or not.\n            var url = $('#id_available_moodle_instances option:selected').text();\n\n            XELib.getTokenForURL(url).then(function (response) {\n                if (response.success == true) {\n                    sessionStorage.setItem(\"currentToken\", response.data);\n                    sessionStorage.setItem(\"currentUrl\", url);\n                } else {\n                    // TODO: Send Notification to user that token is crap\n                }\n            });\n        },\n\n        /**\n         * Get group data from a course.\n         * @param {object} the json object sent to the server\n         * @return resolved data\n         */\n        getGroupData: function (params) {\n            return XELib.jaxyPromise({\n                'call': 'getGroupData',\n                'params': params,\n                'class': 'router'\n            });\n        },\n\n        /**\n         * Moodle removes any changed option/select elements. In order to maintain\n         * the data push data into hidden some that are in the form's page.\n         * @param string name of the tag to be changed\n         * @param string the value to insert\n         * @return resolved data\n         */\n        setHiddenValue: function (tag, value) {\n            $('input[name='+tag+']').val(value);\n        },\n\n        /**\n         * Register all the events for the Mappings Form Page.\n         * @return void\n         */\n        registerMappingEvents: function() {\n            var that = this,\n                form_select = $(\"#id_srccourseshortname\");\n\n            form_select.change(function() {\n\n                if (form_select.val()) {\n                    // change invokes any change so only make an ajax call if there is value\n                    that.getGroupData({\n                        'courseid': form_select.val(),\n                        'coursename': $( \"#id_srccourseshortname option:selected\" ).text()\n                    },).then(function (response) {\n                        // if the text is disabled then use select\n                        if (response.count == 1) {\n                            // Single entry so let's update the text field\n                            $('#id_srccoursegroupnameselect').val(response.data.groupname);\n                            $('#id_srccoursegroupname').val(response.data.groupname);\n\n                        } else if (response.count > 1) {\n                            // Multiple groups, so let's unhide the select\n                            $('#id_srccoursegroupnameselect').empty();\n                            var first_choice = \"\";\n                            for (let i in response.data) {\n                                // This is to store the first select and to be used.\n                                if (first_choice == \"\") {\n                                    first_choice = {\n                                        groupid: response.data[i].groupid,\n                                        groupname: response.data[i].groupname\n                                    };\n                                }\n                                $('#id_srccoursegroupnameselect')\n                                    .append($(\"<option></option>\")\n                                    .attr(\"value\", response.data[i].groupid)\n                                    .text(response.data[i].groupname));\n                            }\n\n                            // Now that it's been populated, set the hidden elements to match the first\n                            // select option.\n                            that.setHiddenValue('srccoursegroupname', first_choice.groupname);\n                            that.setHiddenValue('srccoursegroupid', first_choice.groupid);\n                        } else {\n                            // TODO: The count is neither 1 or greate than 1 so no groups?\n                            // display no groups.\n                        }\n\n                    });\n                } else {\n                    // if there is no value in the course name then clear out the group name.\n                    $('#id_srccoursegroupnameselect').empty();\n                    $('#id_srccoursegroupnametext').text();\n                    $('#id_srccoursegroupnameselect')\n                        .append($(\"<option></option>\")\n                        .attr(\"value\", 0)\n                        .text(\"Please search for a course first\"));\n                }\n            });\n\n            // Any changes to the group element, update the hidden.\n            $(\"#id_srccoursegroupnameselect\").change(function() {\n                var new_value = $(this).find(\"option:selected\").attr('value');\n                var new_text = $(this).find(\"option:selected\").text();\n                that.setHiddenValue('srccoursegroupname', new_text);\n                that.setHiddenValue('srccoursegroupid', new_value);\n            });\n\n            // Register events on the moodles form.\n            // onChange event for the URL selector\n            $('select#id_available_moodle_instances').on('change', function() {\n                that.getTokenReady();\n            });\n        },\n\n        /**\n         * These are registered events being loaded that are NOT being called from mustache templates\n         * @param null\n         * @return resolved data\n         */\n        registerEvents: function () {\n\n            // Let's not load all events, just what we need.\n            if (sessionStorage.getItem('xe_form') == \"mappings\" && sessionStorage.getItem('xe_viewform') == \"true\") {\n                // Register events on the mappings form.\n                this.registerMappingEvents();\n\n            } else if (sessionStorage.getItem('xe_form') == \"moodles\" && sessionStorage.getItem('xe_viewform') == \"true\") {\n                // Register events on the mappings form.\n                console.log(\"Need to complete this at some point rather than loading from template\");\n                // TODO: move from template to here.\n            }\n        },\n\n        init: function () {\n            this.registerEvents();\n            this.getTokenReady();\n        }\n    };\n});"],"file":"form_events.min.js"}